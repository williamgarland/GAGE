package com.accele.gage.config;

import java.io.IOException;
import java.io.OutputStream;
import java.util.Properties;

import com.accele.gage.GAGE;
import com.accele.gage.GAGEException;
import com.accele.gage.GameConfiguration;
import com.accele.gage.Resource;

/**
 * A simple {@link com.accele.gage.GameConfiguration GameConfiguration} writer that writes engine properties to an external destination.
 * <p>
 * This writer will export all engine properties from the {@code GameConfiguration}.
 * An instance of this class can be created at any point after calling the {@link com.accele.gage.GAGE#init(int, int, String) init(int, int, String)} method 
 * and can be called at any point after initialization.
 * </p>
 * 
 * @author William Garland
 * @version 1.0.0
 * @since 1.0.0
 */
public class GameConfigurationWriter {

	private Resource<OutputStream> out;
	private GameConfiguration config;
	
	/**
	 * Creates a new {@link com.accele.gage.config.GameConfigurationWriter GameConfigurationWriter} which will write engine properties to the specified external destination.
	 * @param out the external destination to write the game configuration properties
	 */
	public GameConfigurationWriter(Resource<OutputStream> out) {
		this.out = out;
		this.config = GAGE.getInstance().getConfig();
	}
	
	/**
	 * Retrieves game configuration properties from the {@link com.accele.gage.GameConfiguration GameConfiguration} and writes them to the specified external destination.
	 * <p>
	 * An instance of this class can be created at any point after calling the {@link com.accele.gage.GAGE#init(int, int, String) init(int, int, String)} method 
	 * and can be called at any point after initialization.
	 * </p>
	 * @throws GAGEException if the writer fails to write the properties to the external destination
	 */
	public void write() throws GAGEException {
		Properties props = new Properties();
		props.setProperty("version", config.getVersion());
		props.setProperty("ticksPerSecond", String.valueOf(config.getTicksPerSecond()));
		props.setProperty("doEntityCollision", String.valueOf(config.doEntityCollision()));
		try {
			props.store(out.get(), "Game configuration file generated by GAGE version " + config.getVersion() + ". Do not edit this line.");
		} catch (IOException e) {
			throw new GAGEException(e);
		}
	}
	
}
