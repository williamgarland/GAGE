package com.accele.gage.tile;

import com.accele.gage.Cleanable;
import com.accele.gage.Renderable;
import com.accele.gage.Tickable;
import com.accele.gage.gfx.Graphics;
import com.accele.gage.gfx.Texture;
import com.accele.gage.math.Matrix4f;
import com.accele.gage.math.Vector2f;

/**
 * A wrapper class for holding texture and position information for tiles in a {@link com.accele.gage.tile.TileMap TileMap}.
 * 
 * Individual instances of this class are not designed to be created by the user; they are intended to be generated by the {@code TileMap} class.
 * 
 * @author William Garland
 * @version 1.0.0
 * @since 1.0.0
 */
public class Tile implements Tickable, Renderable, Cleanable {

	private Texture texture;
	protected Vector2f position;
	protected Vector2f size;
	private Matrix4f mat;

	/**
	 * Constructs a new {@code Tile} instance with the specified texture, position, and size.
	 * 
	 * @param texture the {@link com.accele.gage.gfx.Texture Texture} to use for the tile
	 * @param position the translation offset to use for the tile
	 * @param size the normalized size vector to use for the tile
	 */
	public Tile(Texture texture, Vector2f position, Vector2f size) {
		this.texture = texture;
		this.position = position;
		this.size = size;
		this.mat = new Matrix4f().setTranslation(position.x, position.y, 0).scale(size.x, size.y, 1);
	}
	
	@Override
	public void render(Graphics g, double interpolation) {
		g.drawRect(mat, texture);
	}

	@Override
	public void tick() {
		
	}
	
	@Override
	public void clean() {
		
	}
	
	
}
